# Licensed Materials - Property of IBM
# 5737-E67
# @ Copyright IBM Corporation 2016, 2018 All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

---

- name: Getting registry secret
  shell: |
    username=$(kubectl get sa default -n kube-system -o jsonpath='{.secrets[0].name}')
    [[ "X$username" != "X" ]] || exit 1
    password=$(kubectl get secret ${username} -n kube-system -o jsonpath='{.data.token}' | base64 -d)
    [[ "X$password" != "X" ]] || exit 1
    echo token.kube-system.$username
    echo $password
  args:
    executable: /bin/bash
  register: icp_image_pull_secret_result
  until: icp_image_pull_secret_result|succeeded
  retries: 10
  delay: 30

- name: Waiting for default service account to exists
  shell: kubectl get serviceaccounts default
  args:
    executable: /bin/bash
  register: result
  until: result|succeeded
  retries: 15
  delay: 60

- name: Adding ImagePullSecrets to system namespace service account
  shell: |
    kubectl get namespace {{ item }} || kubectl create namespace {{ item }}
    kubectl -n {{ item }} get secret infra-registry-key || \
    kubectl -n {{ item }} create secret docker-registry infra-registry-key \
    --docker-server={{ image_repo.split('/')[0] }} \
    --docker-username={{ icp_image_pull_secret_result.stdout_lines[0] }} \
    --docker-password={{ icp_image_pull_secret_result.stdout_lines[1] }} \
    --docker-email='icp@ibm.com'
    kubectl -n {{ item }} get serviceaccount default || \
    kubectl -n {{ item }} create serviceaccount default
    kubectl -n {{ item }} get serviceaccount default -o yaml | \
    grep -w infra-registry-key || kubectl -n {{ item }} patch serviceaccount default \
    -p '{"imagePullSecrets": [{"name": "infra-registry-key"}]}'
  register: result
  until: result|succeeded
  retries: 3
  delay: 5
  loop:
    - ibmcom
    - cert-manager
    - istio-system
    - kube-system
