apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;
    error_log /dev/stderr crit;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main escape=json '{"createdTs":"$time_iso8601", '
                        '"httpProtocol":"$server_protocol", '
                        '"httpMethod":"$request_method", '
                        '"remoteAddr":"$remote_addr", '
                        '"requestHost":"$host", '
                        '"uri":"$uri", '
                        '"queryStr":"$args", '
                        '"httpStatusCode":"$status", '
                        '"httpReferrer":"$http_referer", '
                        '"xForwardedFor":"$http_x_forwarded_for", '
                        '"bodyBytesSent":"$body_bytes_sent", '
                        '"upstreamResponseTime":"$upstream_response_time", '
                        '"upstreamConnectTime":"$upstream_connect_time", '
                        '"upstreamStatusCode":"$upstream_status", '
                        '"upstreamAddr":"$upstream_addr", '
                        '"userAgent":"$http_user_agent", '
                        '"msec":"$msec"}';
        access_log  off;
        server_tokens off;
        sendfile        on;
        keepalive_timeout  65;
        include /etc/nginx/conf.d/*.conf;
      server {
        listen 80 default_server;
        server_name _;
        location = /health {
          access_log off;
          return 200 'alive';
          add_header Content-Type text/plain;
        }
      }
    }
  default.conf: |
    server {
        listen 80;
        server_name xxx.in;
        expires 10s;
        return 302 https://github.com$request_uri;
    }